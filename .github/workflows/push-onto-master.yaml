name: Push to master
# on:
#   push:
#     branches:
#       - master
on:
  pull_request:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  id-token: write # allows the JWT to be requested from GitHub's OIDC provider
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Release Version
        uses: thebongy/version-check@b88eb2decc2ece667edf2d78665e88254e8403d6
        with:
          file: package.json
          tagFormat: v${version}
          failBuild: true
        id: get_release_version

      - name: Clone Enrichment Plugin
        run: |
          rm -rf rudder-alerta-enrichment-plugin
          git config --global url."https://${{secrets.PAT}}:x-oauth-basic@github.com/rudderlabs".insteadOf "https://github.com/rudderlabs"
          git clone -b "$(cat RUDDER_ENRICH_PLUGIN_BRANCH_NAME)" https://github.com/rudderlabs/rudder-alerta-enrichment-plugin.git

      - name: Build, scan and push
        uses: rudderlabs/build-scan-push-action@v1.5.3
        with:
          context: .
          push: false # todo: change to true
          tags: rudderlabs/alerta:${{ steps.get_release_version.outputs.releaseVersion }}-testing # todo: remove testing suffix after testing
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            COMMIT_ID_VALUE=$(git log --format="%H" -n 1)

      - name: Clean up enrichment plugin
        run: |
          rm -rf rudder-alerta-enrichment-plugin

      # - name: Create tag
      #   uses: actions/github-script@441359b1a30438de65712c2fbca0abe4816fa667
      #   with:
      #     script: |
      #       github.rest.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: 'refs/tags/${{steps.get_release_version.outputs.releaseVersion}}',
      #         sha: context.sha
      #       })
